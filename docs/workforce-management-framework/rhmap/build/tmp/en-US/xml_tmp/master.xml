<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE book [
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<?asciidoc-toc maxdepth="4"?><?asciidoc-numbered?><book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
<info>
<title>RainCatcher</title><subtitle>For Use with FeedHenry 1</subtitle>

<date>2017-09-11</date>
<productname>FeedHenry</productname>
<productnumber>3.x</productnumber>
<release>3.x</release>
<abstract>
    <para>FeedHenry 1 Documentation</para>
</abstract>
<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="Author_Group.xml"/>
<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="Common_Content/Legal_Notice.xml"/>
</info>
<chapter xml:id="introducing-raincatcher">
<title>Introducing RainCatcher</title>
<section xml:id="con-introducing-raincatcher-introducing-raincatcher">
<title>Introducing RainCatcher</title>
<simpara>RainCatcher is a Workforce Management Platform.
The latest version of RainCatcher is 1.0.</simpara>
<simpara>The primary goal of RainCatcher is to produce a set of modules for developers to integrate RainCatcher features into their applications.</simpara>
<simpara>The following features are on the RainCatcher roadmap:</simpara>
<itemizedlist>
<listitem>
<simpara>Workflow Management</simpara>
</listitem>
<listitem>
<simpara>Geolocation</simpara>
</listitem>
<listitem>
<simpara>Image capture</simpara>
</listitem>
<listitem>
<simpara>Internal Messaging and 3rd party Messaging</simpara>
</listitem>
<listitem>
<simpara>Mobile Forms</simpara>
</listitem>
<listitem>
<simpara>Real-time Data Access</simpara>
</listitem>
<listitem>
<simpara>Data Synchronization</simpara>
</listitem>
<listitem>
<simpara>Integration of sensor data</simpara>
</listitem>
</itemizedlist>
<simpara>RainCatcher 1.0 features:</simpara>
<itemizedlist>
<listitem>
<simpara>RainCatcher Security</simpara>
</listitem>
</itemizedlist>
<section xml:id="ref-introducing-raincatcher-introducing-raincatcher">
<title>RainCatcher Reference Material</title>
<simpara>This section includes:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara><link linkend="highlighting-raincatcher-areas-of-focus-introducing-raincatcher">Highlighting RainCatcher Areas of Focus</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="raincatcher-at-a-technical-level-introducing-raincatcher">RainCatcher at a Technical Level</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="identifying-raincatcher-repositories-introducing-raincatcher">Identifying RainCatcher Repositories</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="differentiating-raincatcher-from-tech-preview-introducing-raincatcher">Differentiating RainCatcher from 'Tech Preview'</link></simpara>
</listitem>
</orderedlist>
<section xml:id="highlighting-raincatcher-areas-of-focus-introducing-raincatcher">
<title>Highlighting RainCatcher Areas of Focus</title>
<table frame="all" rowsep="1" colsep="1">
<title>Areas of Focus</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Area</entry>
<entry align="left" valign="top">Focus</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Framework</simpara></entry>
<entry align="left" valign="top"><simpara>A generic and developer friendly framework (set of classes) for building mobile and website Workforce Management solutions</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Modules</simpara></entry>
<entry align="left" valign="top"><simpara>Modules specific to RainCatcher, for example: signature-module, scheduler</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Integrations</simpara></entry>
<entry align="left" valign="top"><simpara>Integrations to satisfy RainCatcher needs, for example: authentication, storage, offline capabilities, server side synchronization</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>User Interface</simpara></entry>
<entry align="left" valign="top"><simpara>Graphical User Interfaces are implemented in AngularJS and Angular</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section xml:id="raincatcher-at-a-technical-level-introducing-raincatcher">
<title>RainCatcher at a Technical Level</title>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://nodejs.org/en/">Node.js</link> used for server side code</simpara>
</listitem>
<listitem>
<simpara>Hybrid mobile development using <link xlink:href="https://cordova.apache.org/">Cordova</link></simpara>
</listitem>
<listitem>
<simpara>Object Oriented approach (classes and interfaces)</simpara>
</listitem>
<listitem>
<simpara>Focus on module reuse and flexibility</simpara>
</listitem>
<listitem>
<simpara>Incorporates open-source technologies, for example: MongoDb, Keycloak, Passport.js</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="identifying-raincatcher-repositories-introducing-raincatcher">
<title>Identifying RainCatcher Repositories</title>
<simpara>The RainCatcher is available in three github repositories:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>github Repositories</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Repository</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-core">raincatcher-core</link></simpara></entry>
<entry align="left" valign="top"><simpara>Contains all of the supported modules and demo server.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-angularjs">raincatcher-angularjs</link></simpara></entry>
<entry align="left" valign="top"><simpara>Contains angularJS user interface for RainCatcher</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-docs">raincatcher-docs</link></simpara></entry>
<entry align="left" valign="top"><simpara>Repository contains RainCatcher documentation</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section xml:id="differentiating-raincatcher-from-tech-preview-introducing-raincatcher">
<title>Differentiating RainCatcher from 'Tech Preview'</title>
<simpara>The RainCatcher project was originally called <emphasis role="strong">Tech Preview</emphasis>.
The <emphasis role="strong">Tech Preview</emphasis> codebase is now deprecated and is accessible at <link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-documentation">Tech Preview Documentation</link>.
The main differences between RainCatcher and <emphasis role="strong">Tech Preview</emphasis> are:</simpara>
<itemizedlist>
<listitem>
<simpara>Mediator pattern is removed from RainCatcher</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Tech Preview</emphasis> is not object oriented</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RainCatcher</emphasis> is written in Typescript</simpara>
</listitem>
</itemizedlist>
</section>
</section>
</section>
</chapter>
<chapter xml:id="introducing-raincatcher-features">
<title>Introducing RainCatcher Features and Modules</title>
<section xml:id="raincatcher_features" remap="_raincatcher_features">
<title>RainCatcher Features</title>
<section xml:id="con-introducing-securityfeatures-introducing-features-and-modules">
<title>Introducing RainCatcher Security Features</title>
<simpara>RainCatcher Security is built around a <emphasis role="strong">Security Interface</emphasis> which abstracts itself from all RainCatcher security libraries.
RainCatcher allows you to integrate a custom security solution.
RainCatcher also provides two out-of-the-box security implementations called <link xlink:href="http://www.keycloak.org/">Keycloak</link> and <link xlink:href="http://passportjs.org/">Passport.js</link>.</simpara>
<simpara><emphasis role="strong">Keycloak</emphasis> and <emphasis role="strong">Passport.js</emphasis> both provide server side authentication and authorization.
<emphasis role="strong">Keycloak</emphasis> and <emphasis role="strong">Passport.js</emphasis> implementations can replace each other without breaking the internal RainCatcher api, modules and also any of the reference applications.</simpara>
<section xml:id="authorization_using_the_security_interface" remap="_authorization_using_the_security_interface">
<title>Authorization using the Security Interface</title>
<simpara>If you build a custom security implementation, the endpoints are secured in the same way as the <emphasis role="strong">Keycloak</emphasis> and <emphasis role="strong">Passport.js</emphasis> implementations.</simpara>
<simpara>If you choose to build a custom security implementation, you will need to:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Import the <link xlink:href="../../../api/0.0.1/auth-passport/docs/interfaces/_src_user_userrepository_.userrepository.html">EndpointSecurity</link> interface from Passport.js</simpara>
</listitem>
<listitem>
<simpara>Implement the interface in the custom security implementation</simpara>
</listitem>
<listitem>
<simpara>Use the <emphasis>protect</emphasis> method to guard routes (the security permissions being role based)</simpara>
</listitem>
</orderedlist>
<note>
<simpara>All <link xlink:href="https://expressjs.com/">express</link> routes outside of WFM modules must implement the <link xlink:href="../../../api/0.0.1/auth-passport/docs/interfaces/_src_user_userrepository_.userrepository.html">EndpointSecurity</link> Security Interface.</simpara>
</note>
</section>
<section xml:id="introducing_passport_js" remap="_introducing_passport_js">
<title>Introducing Passport.js</title>
<simpara><emphasis role="strong">Passport.js</emphasis> is a lightweight authentication middleware solution for Node.js and can be bundled into an existing Node.js server.
<emphasis role="strong">Passport.js</emphasis> offers a comprehensive set of <link xlink:href="http://passportjs.org/docs/configure">strategies</link> that support authentication using a username and password, Facebook logon, Twitter logon, and more.</simpara>
<simpara>For more information, see <link xlink:href="http://passportjs.org/">passportjs.org</link>.</simpara>
<simpara>The <link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-core/tree/master/cloud/passportauth">PassportAuth</link> module is RainCatcher’s implementation of <emphasis role="strong">Passport.js</emphasis> and is the default authentication and authorization module for RainCatcher.</simpara>
</section>
<section xml:id="introducing_keycloak" remap="_introducing_keycloak">
<title>Introducing Keycloak</title>
<simpara>The <emphasis role="strong">Keycloak</emphasis> module is a complete identity management solution. It extends standard authorization and authentication functionality and comes with all the overheads involved in running a server.
Red Hat recommends using <emphasis role="strong">Keycloak</emphasis> in production to avail of the many features available for enterprise security including:</simpara>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://keycloak.gitbooks.io/documentation/server_admin/topics/sso-protocols.html">Single-Sign On</link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://keycloak.gitbooks.io/documentation/content/server_admin/topics/user-federation.html">User Federation</link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://keycloak.gitbooks.io/documentation/content/server_admin/topics/authentication/x509.html">Client Cert Authentication</link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://keycloak.gitbooks.io/documentation/content/server_admin/topics/authentication/otp-policies.html">2FA with OTP</link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://keycloak.gitbooks.io/documentation/content/server_admin/topics/sessions/administering.html">User Session Management</link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://keycloak.gitbooks.io/documentation/server_admin/topics/events.html">Auditing</link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://keycloak.gitbooks.io/documentation/content/server_admin/topics/threat/brute-force.html">Brute Force Detection</link></simpara>
</listitem>
</itemizedlist>
<note>
<simpara><emphasis role="strong">Keycloak</emphasis> is <emphasis>not</emphasis> available by default when running the default RainCatcher solution</simpara>
</note>
</section>
<section xml:id="choosing_passport_js_or_keycloak" remap="_choosing_passport_js_or_keycloak">
<title>Choosing Passport.js or Keycloak</title>
<simpara><emphasis role="strong">Passport.js</emphasis>:</simpara>
<itemizedlist>
<listitem>
<simpara>If you want a standalone Node.js based authentication solution that is ready out-of-the-box, choose <emphasis role="strong">Passport.js</emphasis></simpara>
</listitem>
</itemizedlist>
<simpara><emphasis role="strong">Keycloak</emphasis>:</simpara>
<itemizedlist>
<listitem>
<simpara>If you want a full identity management solution that can be tied into existing saml/ldap/sso solutions, choose <emphasis role="strong">Keycloak</emphasis>.</simpara>
</listitem>
</itemizedlist>
</section>
</section>
</section>
<section xml:id="raincatcher_modules" remap="_raincatcher_modules">
<title>RainCatcher Modules</title>
<section xml:id="con-passportauth-module-introducing-features-and-modules">
<title>Introducing the RainCatcher PassportAuth Module</title>
<simpara>The <link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-core/tree/master/cloud/passportauth">PassportAuth</link> module is RainCatcher’s implementation of <emphasis role="strong">Passport.js</emphasis>.
It is the default authentication and authorization module for RainCatcher.</simpara>
<simpara><emphasis role="strong">PassportAuth</emphasis> provides pluggable authentication using <link xlink:href="http://passportjs.org/docs/configure">strategies</link>.
<emphasis role="strong">PassportAuth</emphasis> offers a comprehensive set of strategies that support authentication using a username and password, Facebook logon, Twitter logon, and more.</simpara>
<simpara><emphasis role="strong">PassportAuth</emphasis> provides:</simpara>
<itemizedlist>
<listitem>
<simpara>Access Control of Express routes</simpara>
</listitem>
<listitem>
<simpara>Authentication using the <link xlink:href="../../../api/0.0.1/auth-passport/docs/modules/_src_auth_defaultstrategy_.html">default strategy</link></simpara>
</listitem>
<listitem>
<simpara>Express session middleware using <link xlink:href="https://github.com/expressjs/session">express-session</link></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="con-datasync-module-introducing-features-and-modules">
<title>Introducing the RainCatcher Datasync Module</title>
<simpara>The <emphasis role="strong">Datasync</emphasis> Module is an implementation of the RainCatcher Sync Framework.
<emphasis role="strong">Datasync</emphasis> is made up of two applications, the <link linkend="datasync-cloud-app-introducing-features-and-modules">Cloud App</link> and the <link linkend="datasync-client-app-introducing-features-and-modules">Client App</link>.
The Cloud App is implemented in the <emphasis role="strong">Datasync</emphasis> cloud module and the Client App is implemented in the <emphasis role="strong">Datasync</emphasis> client module.
The primary function of <emphasis role="strong">Datasync</emphasis> is to synchronize data between the Client Apps (mobile) and the Cloud App running on a backend server.</simpara>
<simpara><emphasis role="strong">Datasync</emphasis> key features:</simpara>
<itemizedlist>
<listitem>
<simpara>Allows synchronization of the RainCatcher workorder data between the RainCatcher Client Apps (mobile) and the RainCatcher Cloud App running on a backend server</simpara>
</listitem>
<listitem>
<simpara>Allows Client Apps (mobile) to use and update data offline (local cache)</simpara>
</listitem>
<listitem>
<simpara>Provides a mechanism to manage bi-directional data synchronization from multiple Client Apps into back-end data stores via the Cloud App</simpara>
</listitem>
<listitem>
<simpara>Allows data updates (that is, deltas) to be distributed from the Cloud App to connected clients</simpara>
</listitem>
<listitem>
<simpara>Provides facilities for managing data collisions from multiple updates in the cloud</simpara>
</listitem>
</itemizedlist>
<simpara>For advanced usage of the <emphasis role="strong">Datasync</emphasis> Module, see the <link xlink:href="{WFM-RC-SyncFrameworkURL}master/docs">sync framework documentation</link>.</simpara>
<section xml:id="datasync-cloud-app-introducing-features-and-modules">
<title>Datasync Cloud App</title>
<simpara>The <emphasis role="strong">Datasync Cloud App</emphasis> is a wrapper for the RainCatcher <link xlink:href="https://github.com/feedhenry/fh-sync">Datasync server</link>.
The <emphasis role="strong">Datasync Cloud App</emphasis> creates a server side service that allows Client Apps (mobile) to synchronize offline data to a preferred back-end data store.
By default, the server connects to a backend mongodb database and stores all client data here.</simpara>
<simpara>For instructions on how to implement the <emphasis role="strong">Datasync Cloud App</emphasis>, see the <emphasis role="strong">Datasync Cloud App</emphasis> <link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-core/blob/master/cloud/datasync/README.md">README.MD</link></simpara>
<simpara>To view an example, see the <emphasis role="strong">Datasync Cloud App</emphasis> <link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-core/blob/master/cloud/datasync/example/index.ts">example</link>.</simpara>
</section>
<section xml:id="datasync-client-app-introducing-features-and-modules">
<title>Datasync Client App</title>
<simpara>The <emphasis role="strong">Datasync Client App</emphasis> is based on the <link xlink:href="https://github.com/feedhenry/fh-sync-js">sync.js client</link>.
In order to work, the <emphasis role="strong">Datasync Client App</emphasis> requires the <emphasis role="strong">Datasync Cloud App</emphasis> to be running on an <emphasis>Express</emphasis> web server.
The <emphasis>Data Synchonization Library</emphasis> can be used for offline storage of mobile applications data.</simpara>
<simpara>For instructions on how to implement the <emphasis role="strong">Datasync Client App</emphasis>, see the <emphasis role="strong">Datasync Client App</emphasis> <link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-core/blob/master/client/datasync-client/README.md">README.MD</link></simpara>
<simpara>To view an example, see the <emphasis role="strong">Datasync Client App</emphasis> <link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-core/blob/master/cloud/datasync/example/index.ts">example</link>.</simpara>
</section>
</section>
</section>
</chapter>
<chapter xml:id="getting-started">
<title>Getting Started with RainCatcher</title>
<section xml:id="running-the-demo-app-running-the-demo-app">
<title>Running the Demo App</title>
<simpara>The RainCatcher demo app comprises of three applications <emphasis role="strong">Mobile</emphasis>, <emphasis role="strong">Portal</emphasis> and a <emphasis role="strong">Node.js Server</emphasis>.
For testing and demo purposes, <emphasis role="strong">Mobile</emphasis> and <emphasis role="strong">Portal</emphasis> are launched in the browser.
<emphasis role="strong">Mobile</emphasis> can be built to run on a mobile phone.</simpara>
<section xml:id="pro-running-the-demo-app-running-the-demo-app">
<title>Introduction</title>
<simpara>This section includes:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara><link linkend="pro-cloning-the-git-repository-running-the-demo-app">Cloning the Git Repository</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="pro-installing-angular-dependencies-running-the-demo-app">Installing Angular Dependencies</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="pro-installing-core-dependencies-running-the-demo-app">Installing Core Dependencies</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="pro-starting-mongodb-and-redis-running-the-demo-app">Starting MongoDB and Redis</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="pro-starting-the-core-server-running-the-demo-app">Starting the Core Server</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="pro-running-the-mobile-and-portal-demo-applications-running-the-demo-app">Running the Mobile and Portal Demo Applications</link></simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="prerequisites" remap="_prerequisites">
<title>Prerequisites</title>
<itemizedlist>
<listitem>
<simpara>Node and npm installed (tested on Node 6 LTS)</simpara>
</listitem>
<listitem>
<simpara>git</simpara>
</listitem>
<listitem>
<simpara>access to <literal>git@github.com:feedhenry-raincatcher/raincatcher-angularjs.git</literal></simpara>
</listitem>
<listitem>
<simpara>MongoDB (tested with version: &lt;latest version&gt;)</simpara>
</listitem>
<listitem>
<simpara>Redis (tested with version: &lt;latest version&gt;)</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="running_the_demo_app" remap="_running_the_demo_app">
<title>Running the Demo App</title>
<simpara>This procedure will install the latest master branch.</simpara>
<bridgehead xml:id="pro-cloning-the-git-repository-running-the-demo-app" renderas="sect4">Cloning the Git Repository</bridgehead>
<programlisting language="bash" linenumbering="unnumbered">git clone git@github.com:feedhenry-raincatcher/raincatcher-angularjs.git

cd raincatcher-angularjs</programlisting>
<bridgehead xml:id="pro-installing-angular-dependencies-running-the-demo-app" renderas="sect4">Installing Repository Dependencies</bridgehead>
<programlisting language="bash" linenumbering="unnumbered">npm install
npm run bootstrap</programlisting>
<bridgehead xml:id="pro-installing-core-dependencies-running-the-demo-app" renderas="sect4">Installing Core Dependencies</bridgehead>
<programlisting language="bash" linenumbering="unnumbered">cd ./core
npm install
npm run bootstrap</programlisting>
<note>
<simpara>The Core repository is automatically cloned by the command <literal>npm run bootstrap</literal>.</simpara>
</note>
<bridgehead xml:id="pro-starting-mongodb-and-redis-running-the-demo-app" renderas="sect4">Starting MongoDB and Redis</bridgehead>
<simpara>Start MongoDB. For more information, see <link xlink:href="https://docs.mongodb.com/manual/tutorial/manage-mongodb-processes/#start-mongod-processes">Start MongoDB Processes</link>.</simpara>
<simpara>Start Redis. For more information, see <link xlink:href="https://redis.io/topics/quickstart#starting-redis">Starting Redis</link>.</simpara>
<bridgehead xml:id="pro-starting-the-core-server-running-the-demo-app" renderas="sect4">Starting the Core Server</bridgehead>
<programlisting language="bash" linenumbering="unnumbered">npm run start</programlisting>
<note>
<simpara>The terminal is out of use while the Core Server is running. Open a new terminal to run additional commands.</simpara>
</note>
<bridgehead xml:id="pro-running-the-mobile-and-portal-demo-applications-running-the-demo-app" renderas="sect4">Running the Mobile and Portal Demo Applications</bridgehead>
<programlisting language="bash" linenumbering="unnumbered">cd ..
npm run start</programlisting>
<simpara>Both the Mobile and Portal Demo open automatically in a browser.</simpara>
<simpara>For login details, refer to <link linkend="credentials-for-the-demo-application-running-the-demo-app">Credentials for the Demo Application</link> section of <link linkend="ref-demo-app-running-the-demo-app">RainCatcher Demo Application Reference Material</link>.</simpara>
</section>
<section xml:id="ref-demo-app-running-the-demo-app">
<title>RainCatcher Demo Application Reference Material</title>
<simpara>This section includes:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara><link linkend="credentials-for-the-demo-application-running-the-demo-app">Credentials for the Demo Application</link></simpara>
</listitem>
</orderedlist>
<section xml:id="credentials-for-the-demo-application-running-the-demo-app">
<title>Credentials for the Demo Application</title>
<simpara>Login using the following credentials:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="33*"/>
<thead>
<row>
<entry align="left" valign="top">Application</entry>
<entry align="left" valign="top">Username</entry>
<entry align="left" valign="top">Password</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Mobile</simpara></entry>
<entry align="left" valign="top"><simpara><literal>trever</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>123</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Portal</simpara></entry>
<entry align="left" valign="top"><simpara><literal>max</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>123</literal></simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
</section>
</section>
</chapter>
<chapter xml:id="programming-a-raincatcher-project">
<title>Programming a RainCatcher Project</title>
<section xml:id="working_with_passportauth" remap="_working_with_passportauth">
<title>Working With PassportAuth</title>
<simpara>This section describes how to modify aspects of <emphasis role="strong">PassportAuth</emphasis>.</simpara>
<section xml:id="con-passportauth-module-working-with-passportjs">
<title>Introducing the RainCatcher PassportAuth Module</title>
<simpara>The <link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-core/tree/master/cloud/passportauth">PassportAuth</link> module is RainCatcher’s implementation of <emphasis role="strong">Passport.js</emphasis>.
It is the default authentication and authorization module for RainCatcher.</simpara>
<simpara><emphasis role="strong">PassportAuth</emphasis> provides pluggable authentication using <link xlink:href="http://passportjs.org/docs/configure">strategies</link>.
<emphasis role="strong">PassportAuth</emphasis> offers a comprehensive set of strategies that support authentication using a username and password, Facebook logon, Twitter logon, and more.</simpara>
<simpara><emphasis role="strong">PassportAuth</emphasis> provides:</simpara>
<itemizedlist>
<listitem>
<simpara>Access Control of Express routes</simpara>
</listitem>
<listitem>
<simpara>Authentication using the <link xlink:href="../../../api/0.0.1/auth-passport/docs/modules/_src_auth_defaultstrategy_.html">default strategy</link></simpara>
</listitem>
<listitem>
<simpara>Express session middleware using <link xlink:href="https://github.com/expressjs/session">express-session</link></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="pro-working-with-passportauth-working-with-passportjs">
<title>Introduction</title>
<simpara>This section includes:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara><link linkend="pro-pointing-passportauth-to-a-datasource-working-with-passportjs">Pointing PassportAuth to a Datasource</link></simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="prerequisites_2" remap="_prerequisites_2">
<title>Prerequisites</title>
<simpara>You must have completed:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara><link linkend="getting-started">Getting Started</link></simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="procedure" remap="_procedure">
<title>Procedure</title>
<section xml:id="configuration_of_passportauth_module" remap="_configuration_of_passportauth_module">
<title>Configuration of PassportAuth module</title>
<simpara>The module is an out of the box security solution for default integration. PassportAuth uses JSON files that contain user data.
This user data contains sample users and access roles for demo purposes in the
<link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-core/blob/master/demo/server/src/modules/wfm-user/users.json">Demo Data</link>.
The following procedure describes how to use a different user data source.</simpara>
<bridgehead xml:id="pro-pointing-passportauth-to-a-datasource-working-with-passportjs" renderas="sect4">Pointing PassportAuth to a Datasource</bridgehead>
<note>
<simpara><emphasis>UserRepository</emphasis> requires user data containing a minimum of username and password to work.</simpara>
</note>
<orderedlist numeration="arabic">
<listitem>
<simpara>Implement the <link xlink:href="../../../api/0.0.1/auth-passport/docs/interfaces/_src_user_userrepository_.userrepository.html">UserRepository</link>.</simpara>
</listitem>
</orderedlist>
<simpara>For an end to end implementation of the <emphasis>UserRepository</emphasis> interface, see <link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-core/tree/master/cloud/passportauth/example">PassportAuth-Example</link>.</simpara>
</section>
</section>
<section xml:id="passportauth_reference_material" remap="_passportauth_reference_material">
<title>PassportAuth Reference Material</title>
<simpara>The security aspects of <emphasis role="strong">PassportAuth</emphasis> module are described in the Security Strategy and cover areas such as:</simpara>
<itemizedlist>
<listitem>
<simpara>Understanding Session Management</simpara>
</listitem>
<listitem>
<simpara>Defining Access Control</simpara>
</listitem>
<listitem>
<simpara>Defining Password Storage</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">PassportAuth</emphasis> Authentication</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">PassportAuth</emphasis> Authorization</simpara>
</listitem>
<listitem>
<simpara>Customizing a Strategy</simpara>
</listitem>
<listitem>
<simpara>PassportAuth Demo Users and Access Roles</simpara>
</listitem>
</itemizedlist>
<simpara>For more information, see <link linkend="ref-passportauth-securitystrategy-defining-raincatcher-security">Defining the Security Strategy for RainCatcher PassportAuth</link>.</simpara>
</section>
</section>
</chapter>
<chapter xml:id="raincatcher-security">
<title>RainCatcher Security</title>
<section xml:id="ref-passportauth-securitystrategy-defining-raincatcher-security">
<title>Defining the Security Strategy for RainCatcher PassportAuth</title>
<simpara>This section includes:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara><link linkend="understanding-session-management-defining-raincatcher-security">Understanding Session Management</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="defining-access-control-defining-raincatcher-security">Defining Access Control</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="defining-password-storage-defining-raincatcher-security">Defining Password Storage</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="passportauth-authentication-defining-raincatcher-security">PassportAuth Authentication</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="passportauth-authorization-defining-raincatcher-security">PassportAuth Authorization</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="customizing-a-strategy-defining-raincatcher-security">Customizing a Strategy</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="passportAuth-demo-users-and-access-roles-defining-raincatcher-security">PassportAuth Demo Users and Access Roles</link></simpara>
</listitem>
</orderedlist>
<section xml:id="understanding-session-management-defining-raincatcher-security">
<title>Understanding Session Management</title>
<simpara>The <emphasis>express-session</emphasis> module provides session management functionality for <emphasis role="strong">PassportAuth</emphasis>.
For more information, see <link xlink:href="https://github.com/expressjs/session">express-session</link>.</simpara>
</section>
<section xml:id="defining-access-control-defining-raincatcher-security">
<title>Defining Access Control</title>
<simpara><emphasis>Routes</emphasis> are protected by <emphasis role="strong">PassportAuth</emphasis> which provides role based access control.
<emphasis>AuthService</emphasis> is an an implementation of <link xlink:href="../../../raincatcher-docs/0.0.1/auth-passport/docs/classes/_src_auth_passportauth_.passportauth.html#setup">PassportAuth</link>.
For more information, see the following example:</simpara>
<programlisting language="typescript" linenumbering="unnumbered">app.get('/testAdminEndpoint', authService.protect('admin'), (req: express.Request, res: express.Response) =&gt; {
  res.json({ routeName: '/testAdminEndpoint', msg: 'authorized to access admin endpoint' });
});</programlisting>
<note>
<simpara>Demo roles are defined in <link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-core/blob/master/demo/server/src/modules/wfm-user/users.json">user.json</link>.</simpara>
</note>
</section>
<section xml:id="defining-password-storage-defining-raincatcher-security">
<title>Defining Password Storage</title>
<simpara>The <emphasis role="strong">PassportAuth</emphasis> user data is stored in <link xlink:href="../../../api/0.0.1/auth-passport/docs/interfaces/_src_user_userrepository_.userrepository.html#getuserbylogin">User Repository Interface</link>.
Make sure that the <emphasis>User Repository Interface</emphasis> is implemented in order to point <emphasis role="strong">PassportAuth</emphasis> to a datasource.</simpara>
</section>
<section xml:id="passportauth-authentication-defining-raincatcher-security">
<title>PassportAuth Authentication</title>
<simpara>RainCatcher authentication is handled by the coud server using users unique username and password combination.
The <emphasis role="strong">PassportAuth</emphasis> service is a default authentication strategy as based on the local Passport.js implementation.</simpara>
<simpara><emphasis role="strong">PassportAuth</emphasis> uses <link xlink:href="../../../api/0.0.1/auth-passport/docs/interfaces/_src_auth_passportauth_.endpointsecurity.html#authenticate">authenticate</link>
middleware for cookie based authentication.To access <emphasis>express</emphasis> routes,
a user must login using their credentials. A cookie containing a user session key is used to authenticate and
authorize a user who is requesting a server endpoint.</simpara>
<note>
<simpara>In the demonstration application, the login post route has an authenticate() method that checks user credentials
against the stored credentials in the <emphasis>user.json</emphasis> file. It also checks the user’s role against the role on <emphasis>user.json</emphasis>.</simpara>
</note>
<simpara>For more information, see the <link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-core/tree/master/cloud/passportauth/example">PassportAuth example</link>.</simpara>
</section>
<section xml:id="passportauth-authorization-defining-raincatcher-security">
<title>PassportAuth Authorization</title>
<simpara>Authorization is supported by <link xlink:href="../../../api/0.0.1/auth-passport/docs/interfaces/_src_auth_passportauth_.endpointsecurity.html">protect middleware</link> that validates a <emphasis>user session id</emphasis> against session.</simpara>
</section>
<section xml:id="customizing-a-strategy-defining-raincatcher-security">
<title>Customizing a Strategy</title>
<simpara>The link:default strategy for the <emphasis role="strong">PassportAuth</emphasis> module implements the <emphasis role="strong">Passport.js</emphasis> local strategy.
To use a different security strategy that is supported by RainCatcher, override the
<link xlink:href="../../../api/0.0.1/auth-passport/docs/classes/_src_auth_passportauth_.passportauth.html#setup">PassportAuth.setup</link> method.</simpara>
</section>
<section xml:id="passportAuth-demo-users-and-access-roles-defining-raincatcher-security">
<title>PassportAuth Demo Users and Access Roles</title>
<simpara><emphasis role="strong">PassportAuth</emphasis> is by default integrated with the Demo application and contains sample users and access roles which are defined in the <link xlink:href="https://github.com/feedhenry-raincatcher/raincatcher-core/blob/master/demo/server/src/modules/wfm-user/users.json">Demo Data</link> JSON file.</simpara>
<simpara><emphasis>Revised on 2017-09-11 12:14:52 IST</emphasis></simpara>
</section>
</section>
</chapter>
</book>